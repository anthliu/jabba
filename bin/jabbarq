#!/usr/bin/env python3

import argparse
import json

from rq import Queue
from redis import Redis

from jabbalib import Job, parse_jobs, run_job

def main(args, overrides):
    jobs = []
    for config_path in args.config_paths:
        with open(config_path) as f:
            cfg = json.load(f)
        jobs.extend(parse_jobs(cfg, overrides))

    q = Queue(connection=Redis())
    for job in jobs:
        if args.dry_run:
            print(f'Test running process "{job.command}"')
        q.enqueue(run_job, job, dry_run=args.dry_run)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Run jobs in sequence and in parallel',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('config_paths', nargs='+', help='Config files to run (json)')
    parser.add_argument('-x', '--overrides', nargs='+', help='Parameters to override from the config')
    parser.add_argument('--dry_run', action='store_true', help='Run through config without running commands')
    args = parser.parse_args()
    overrides = {}
    if args.overrides is not None:
        for override in args.overrides:
            flag, value = override.split('=', 1)
            try:
                overrides[flag] = json.loads(value)
            except json.JSONDecodeError:
                overrides[flag] = value

    main(args, overrides)
